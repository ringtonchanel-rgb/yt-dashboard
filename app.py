import streamlit as st
import pandas as pd
import plotly.express as px

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.set_page_config(page_title="YouTube Dashboard", layout="wide")
st.markdown(
    "<h1 style='text-align: center;'>üìä YouTube Dashboard üöÄ</h1>",
    unsafe_allow_html=True
)
st.write("–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ YouTube-–∫–∞–Ω–∞–ª–∞: –ø—Ä–æ—Å–º–æ—Ç—Ä—ã, CTR, —É–¥–µ—Ä–∂–∞–Ω–∏–µ, –¥–æ—Ö–æ–¥ –∏ –¥—Ä—É–≥–∏–µ –∫–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏")

# –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é
st.sidebar.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
uploaded_file = st.sidebar.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV –∏–∑ YouTube Studio", type="csv")

num_videos = st.sidebar.slider("–°–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–∏–¥–µ–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å:", 3, 30, 7)

metrics_options = {
    "–ü—Ä–æ—Å–º–æ—Ç—Ä—ã": "Views",
    "CTR": "Impressions click-through rate",
    "AVD (—Å—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞)": "Average view duration",
    "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ": "Duration",
    "–î–æ—Ö–æ–¥": "Estimated revenue",
    "–ü–æ–¥–ø–∏—Å—á–∏–∫–∏": "Subscribers"
}
selected_metrics = st.sidebar.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç—Ä–∏–∫–∏:", list(metrics_options.keys()), default=["–ü—Ä–æ—Å–º–æ—Ç—Ä—ã"])

# –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω
if uploaded_file:
    df = pd.read_csv(uploaded_file)

    # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
    if "–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ" in df.columns:
        title_col = "–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ"
    elif "Title" in df.columns:
        title_col = "Title"
    else:
        title_col = None

    if "–ö–æ–Ω—Ç–µ–Ω—Ç" in df.columns:
        id_col = "–ö–æ–Ω—Ç–µ–Ω—Ç"
    elif "Video ID" in df.columns:
        id_col = "Video ID"
    else:
        id_col = None

    # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ N –≤–∏–¥–µ–æ
    df = df.tail(num_videos)

    # –ï—Å–ª–∏ ID –µ—Å—Ç—å ‚Äî –¥–µ–ª–∞–µ–º –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏
    if id_col:
        df["YouTube Link"] = df[id_col].apply(lambda x: f"https://www.youtube.com/watch?v={x}")

    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫
    for metric in selected_metrics:
        col_name = metrics_options[metric]
        if col_name in df.columns:
            st.subheader(f"{metric} –ø–æ –≤–∏–¥–µ–æ")
            fig = px.bar(
                df,
                x=title_col if title_col else id_col,
                y=col_name,
                text=col_name,
                hover_data=[id_col] if id_col else None,
                title=metric
            )
            fig.update_traces(texttemplate='%{text}', textposition='outside')
            fig.update_layout(xaxis_tickangle=-30)
            st.plotly_chart(fig, use_container_width=True)

    # –¢–∞–±–ª–∏—Ü–∞ —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏
    st.subheader("üìã –¢–∞–±–ª–∏—Ü–∞ –≤—Å–µ—Ö –º–µ—Ç—Ä–∏–∫")
    show_cols = []
    if title_col: show_cols.append(title_col)
    if id_col: show_cols.append(id_col)
    if "YouTube Link" in df.columns: show_cols.append("YouTube Link")
    for m in selected_metrics:
        if metrics_options[m] in df.columns:
            show_cols.append(metrics_options[m])

    st.dataframe(df[show_cols])
else:
    st.info("üëÜ –ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É")
