import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="YouTube Dashboard", layout="wide")

st.title("üìä YouTube Analytics Dashboard")

# –ó–∞–≥—Ä—É–∑–∫–∞ CSV
uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV –∏–∑ YouTube Studio", type=["csv"])

if uploaded_file:
    df = pd.read_csv(uploaded_file)

    # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É "–ò—Ç–æ–≥–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"
    if "–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ" in df.columns:
        df = df[df["–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ"].notna()]

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    if "–í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ" in df.columns:
        df["–í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ"] = pd.to_datetime(df["–í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ"], errors="coerce")
        df = df.sort_values("–í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ", ascending=False)

    # –°–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–∏–¥–µ–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å
    n = st.slider("–°–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–∏–¥–µ–æ –ø–æ–∫–∞–∑–∞—Ç—å:", 3, 20, 8)
    subset = df.head(n).copy()

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    st.subheader("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤–∏–¥–µ–æ")
    st.dataframe(subset)

    # –í—ã–±–æ—Ä –º–µ—Ç—Ä–∏–∫
    available_metrics = ["–ü—Ä–æ—Å–º–æ—Ç—Ä—ã", "–ü–æ–∫–∞–∑—ã", "CTR –¥–ª—è –∑–Ω–∞—á–∫–æ–≤ –≤–∏–¥–µ–æ (%)", "–°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"]
    selected_metrics = st.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞", available_metrics, default=["–ü—Ä–æ—Å–º–æ—Ç—Ä—ã", "CTR –¥–ª—è –∑–Ω–∞—á–∫–æ–≤ –≤–∏–¥–µ–æ (%)"])

    if selected_metrics:
        st.subheader("üìà –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫")
        fig = px.line(subset, x="–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ", y=selected_metrics, markers=True)
        st.plotly_chart(fig, use_container_width=True)

else:
    st.info("üëÜ –ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É")
